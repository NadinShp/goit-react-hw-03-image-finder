{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageItem.module.css","App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loaders.module.css","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","servises/pixabayApi.js","components/Button/Button.js","components/Loader/Loaders.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","SearchBar","state","searchWord","handleInputValue","e","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","Searchbar","SearchForm","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","onChange","autoComplete","autoFocus","placeholder","Component","defaultProps","modalRoot","document","querySelector","Modal","handleCloseEsc","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","onClick","src","imgUrl","alt","ImageGalleryItem","webformatURL","user","onChooseImg","ImageGalleryItem__image","ImageGallery","data","map","id","BASE_URL","KEY","fetchImages","query","page","path","axios","get","then","response","hits","propTypes","PropTypes","string","number","Button","onRequest","Loaders","wrapper","color","height","width","App","selectedImg","images","showModal","isLoading","error","onChangeQuery","handleRequest","a","handleLoadMore","prevState","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","handleChooseImg","pictureId","findImg","find","image","largeImageURL","prevProps","shouldRenderLoadMoreBtn","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22d175f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3ol_7\",\"Modal\":\"Modal_Modal__1iLVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageItem_ImageGalleryItem__V_v8f\",\"ImageGalleryItem__image\":\"ImageItem_ImageGalleryItem__image__BHj3S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2MjI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2INPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2TFvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loaders_wrapper__F45sO\"};","import styles from './Searchbar.module.css';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    searchWord: '',\r\n  };\r\n  handleInputValue = e => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({\r\n      searchWord: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.searchWord);\r\n  };\r\n  render() {\r\n    const { searchWord } = this.state;\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchForm__button}>\r\n            <span className={styles.SearchForm__buttonLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            className={styles.SearchForm__input}\r\n            type=\"text\"\r\n            value={searchWord}\r\n            onChange={this.handleInputValue}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nSearchBar.defaultProps = {\r\n  searchWord: '',\r\n};\r\nSearchBar.propTypes = {\r\n  searchWord: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default SearchBar;\r\n","import styles from './Modal.module.css';\r\nimport { createPortal } from 'react-dom';\r\nimport { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleCloseEsc);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleCloseEsc);\r\n  }\r\n  handleCloseEsc = e => {\r\n    if (e.code === 'Escape') {\r\n      // console.log('close modal window');\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.Modal}>\r\n          <img src={this.props.imgUrl} alt=\"large works\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  imgUrl: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import styles from './ImageItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, user, onChooseImg }) => (\r\n  <li className={styles.ImageGalleryItem}>\r\n    <img\r\n      src={webformatURL}\r\n      alt={`works of ${user}`}\r\n      className={styles.ImageGalleryItem__image}\r\n      onClick={onChooseImg}\r\n    />\r\n  </li>\r\n);\r\nImageGalleryItem.defaultProps = {\r\n  user: 'user',\r\n};\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  user: PropTypes.string,\r\n  onChooseImg: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ data, onChooseImg }) => (\r\n  <ul className={styles.ImageGallery}>\r\n    {data.map(({ id, webformatURL, user }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        webformatURL={webformatURL}\r\n        user={user}\r\n        onChooseImg={() => onChooseImg(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\nImageGallery.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      user: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onChooseImg: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst KEY = '20667858-5f0c6641398370706bf4f66c3';\r\n\r\nconst fetchImages = (query = '', page = 1) => {\r\n  const path = `${BASE_URL}/?q=${query}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return axios.get(path).then(response => response.data.hits);\r\n};\r\nfetchImages.defaultProps = {\r\n  query: '',\r\n  page: 1,\r\n};\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string,\r\n  page: PropTypes.number,\r\n};\r\n\r\nexport default fetchImages;\r\n","import styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onRequest }) => (\r\n  <button type=\"button\" className={styles.Button} onClick={onRequest}>\r\n    Load more\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  onRequest: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loaders.module.css';\r\n\r\nconst Loaders = () => (\r\n  <div className={styles.wrapper}>\r\n    <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\nexport default Loaders;\r\n","import { Component } from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport styles from './App.module.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport fetchImages from './servises/pixabayApi';\nimport Button from './components/Button/Button';\nimport Loaders from './components/Loader/Loaders';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  state = {\n    selectedImg: '',\n    images: [],\n    showModal: false,\n    query: '',\n    page: 1,\n    isLoading: false,\n    error: null,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.handleRequest();\n    }\n  }\n  onChangeQuery = query => {\n    this.setState({\n      query: query,\n      page: 1,\n      images: [],\n      error: null,\n    });\n  };\n  handleRequest = async () => {\n    const { query } = this.state;\n    this.setState({ isLoading: true });\n    try {\n      const hits = await fetchImages(query);\n      this.setState({ images: hits });\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n  handleLoadMore = async () => {\n    const { query, page } = this.state;\n    this.setState({ isLoading: true });\n    try {\n      const hits = await fetchImages(query, page + 1);\n      this.setState(prevState => ({\n        page: prevState.page + 1,\n        images: [...prevState.images, ...hits],\n      }));\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  handleChooseImg = pictureId => {\n    const { images } = this.state;\n    const findImg = images.find(image => image.id === pictureId);\n    this.setState({ selectedImg: findImg.largeImageURL });\n    this.toggleModal();\n  };\n  render() {\n    const { showModal, images, isLoading, error, selectedImg } = this.state;\n    const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {error && <h1>Ssory something is wrong. Try again, please</h1>}\n        {images.length > 0 && (\n          <ImageGallery data={images} onChooseImg={this.handleChooseImg} />\n        )}\n        {isLoading && <Loaders onClose={this.toggleModal} />}\n        {shouldRenderLoadMoreBtn && <Button onRequest={this.handleLoadMore} />}\n        {showModal && <Modal onClose={this.toggleModal} imgUrl={selectedImg} />}\n      </div>\n    );\n  }\n}\nApp.defaultProps = {\n  selectedImg: '',\n  images: [],\n  showModal: false,\n  query: '',\n  page: 1,\n  isLoading: false,\n  error: null,\n};\nApp.propTypes = {\n  selectedImg: PropTypes.string,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      webformatURL: PropTypes.string,\n      user: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ),\n  showModal: PropTypes.bool,\n  query: PropTypes.string,\n  page: PropTypes.number,\n  isLoading: PropTypes.bool,\n  error: PropTypes.object,\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__IwStK\",\"SearchForm\":\"Searchbar_SearchForm__11ACZ\",\"SearchForm__button\":\"Searchbar_SearchForm__button__C-Zh1\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__2GuKl\",\"SearchForm__input\":\"Searchbar_SearchForm__input__17Tk9\"};"],"sourceRoot":""}